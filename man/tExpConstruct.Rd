% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tExpConstruct.R
\name{tExpConstruct}
\alias{tExpConstruct}
\title{Construct a taxaExp object}
\usage{
tExpConstruct(readCountsFP = NULL, geneInfoFP = NULL, taxa = "all",
  subtaxa = "all", normalize = c("TPM", "RPKM", "CPM"), rmOut = FALSE,
  verbose = FALSE)
}
\arguments{
\item{readCountsFP}{a text file contains raw read counts data.
Row names correspond with gene names,
and column names correspond with taxon and subtaxon names.}

\item{geneInfoFP}{a text file contains gene length information.
Row names conrrespond with gene names,
and column names correspond with taxon names.}

\item{taxa}{one single string or a vector of strings specifying main taxa selected for
constructing \code{taxaExp} object.
Taxa names are extracted from row names given in gene length file.
If one single string "all" is given,
all the taxa in the row names will be matched and selected ("all" by default).}

\item{subtaxa}{one single string or a vector of strings sepcifying sub taxa selected for
constructing \code{taxaExp} object.
If one single string "all" is given,
all the sub taxa in the row names will be matched and selected ("all" by default).}

\item{normalize}{a single string sepcifying normalization method ("TPM", "RPKM" or "CPM")
while constructing \code{taxaExp} object ("TPM" by default).}

\item{rmOut}{a logical sepcifying whether to remove read counts outliers
while constructing \code{taxaExp} objects (TRUE by default).}

\item{verbose}{a logical specifying whether to print more information on the screen
while constructing \code{taxaExp} objects (FALSE by default).}
}
\value{
returns an object of class \code{Taxa} (S3 class, a list of \code{taxonExp} objects).
}
\description{
Constructor function for \code{taxaExp} objects.
This function takes in a read counts file and a gene information file.
And construct a \code{taxaExp} object from which user can extract information
for display or for further analysis.
}
\examples{

taxa.objects = tExpConstruct(
   readCountsFP = system.file('extdata/tetraexp.read.counts.raw.txt', package = 'AnceTran'),
   geneInfoFP = system.file('extdata/tetraexp.length.ortholog.txt', package = 'AnceTran'),
   taxa = "all", subtaxa = c("Brain", "Cerebellum"), normalize = "TPM")
}
